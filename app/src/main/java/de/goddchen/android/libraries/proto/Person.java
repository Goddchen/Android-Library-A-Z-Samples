// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: c:\Users\goddc\git\Android-Library-A-Z-Samples\app\src\main\proto\person.proto at 6:1
package de.goddchen.android.libraries.proto;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;

import java.io.IOException;

import okio.ByteString;

public final class Person extends Message<Person, Person.Builder> {
    public static final ProtoAdapter<Person> ADAPTER = new ProtoAdapter_Person();
    public static final String DEFAULT_NAME = "";
    public static final Integer DEFAULT_AGE = 0;
    private static final long serialVersionUID = 0L;
    @WireField(
            tag = 1,
            adapter = "com.squareup.wire.ProtoAdapter#STRING",
            label = WireField.Label.REQUIRED
    )
    public final String name;

    @WireField(
            tag = 2,
            adapter = "com.squareup.wire.ProtoAdapter#INT32",
            label = WireField.Label.REQUIRED
    )
    public final Integer age;

    public Person(String name, Integer age) {
        this(name, age, ByteString.EMPTY);
    }

    public Person(String name, Integer age, ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this.name = name;
        this.age = age;
    }

    @Override
    public Builder newBuilder() {
        Builder builder = new Builder();
        builder.name = name;
        builder.age = age;
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof Person)) return false;
        Person o = (Person) other;
        return Internal.equals(unknownFields(), o.unknownFields())
                && Internal.equals(name, o.name)
                && Internal.equals(age, o.age);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + (name != null ? name.hashCode() : 0);
            result = result * 37 + (age != null ? age.hashCode() : 0);
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        if (name != null) builder.append(", name=").append(name);
        if (age != null) builder.append(", age=").append(age);
        return builder.replace(0, 2, "Person{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<Person, Builder> {
        public String name;

        public Integer age;

        public Builder() {
        }

        public Builder name(String name) {
            this.name = name;
            return this;
        }

        public Builder age(Integer age) {
            this.age = age;
            return this;
        }

        @Override
        public Person build() {
            if (name == null
                    || age == null) {
                throw Internal.missingRequiredFields(name, "name",
                        age, "age");
            }
            return new Person(name, age, buildUnknownFields());
        }
    }

    private static final class ProtoAdapter_Person extends ProtoAdapter<Person> {
        ProtoAdapter_Person() {
            super(FieldEncoding.LENGTH_DELIMITED, Person.class);
        }

        @Override
        public int encodedSize(Person value) {
            return ProtoAdapter.STRING.encodedSizeWithTag(1, value.name)
                    + ProtoAdapter.INT32.encodedSizeWithTag(2, value.age)
                    + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, Person value) throws IOException {
            ProtoAdapter.STRING.encodeWithTag(writer, 1, value.name);
            ProtoAdapter.INT32.encodeWithTag(writer, 2, value.age);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public Person decode(ProtoReader reader) throws IOException {
            Builder builder = new Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1; ) {
                switch (tag) {
                    case 1:
                        builder.name(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 2:
                        builder.age(ProtoAdapter.INT32.decode(reader));
                        break;
                    default: {
                        FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                        Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                        builder.addUnknownField(tag, fieldEncoding, value);
                    }
                }
            }
            reader.endMessage(token);
            return builder.build();
        }

        @Override
        public Person redact(Person value) {
            Builder builder = value.newBuilder();
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}
